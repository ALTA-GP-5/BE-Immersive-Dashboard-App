// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	feedbackentities "immersive/domains/feedback/entities"

	mock "github.com/stretchr/testify/mock"
)

// FeedBackRepoMock is an autogenerated mock type for the IFeedBackRepo type
type FeedBackRepoMock struct {
	mock.Mock
}

// FindAll provides a mock function with given fields: feedBackEntity
func (_m *FeedBackRepoMock) FindAll(feedBackEntity feedbackentities.FeedBackEntity) ([]feedbackentities.FeedBackEntity, error) {
	ret := _m.Called(feedBackEntity)

	var r0 []feedbackentities.FeedBackEntity
	if rf, ok := ret.Get(0).(func(feedbackentities.FeedBackEntity) []feedbackentities.FeedBackEntity); ok {
		r0 = rf(feedBackEntity)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]feedbackentities.FeedBackEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(feedbackentities.FeedBackEntity) error); ok {
		r1 = rf(feedBackEntity)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: feedBackEntity
func (_m *FeedBackRepoMock) Insert(feedBackEntity feedbackentities.FeedBackEntity) error {
	ret := _m.Called(feedBackEntity)

	var r0 error
	if rf, ok := ret.Get(0).(func(feedbackentities.FeedBackEntity) error); ok {
		r0 = rf(feedBackEntity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateMentee provides a mock function with given fields: feedBackEntity
func (_m *FeedBackRepoMock) UpdateMentee(feedBackEntity feedbackentities.FeedBackEntity) error {
	ret := _m.Called(feedBackEntity)

	var r0 error
	if rf, ok := ret.Get(0).(func(feedbackentities.FeedBackEntity) error); ok {
		r0 = rf(feedBackEntity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFeedBackRepoMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewFeedBackRepoMock creates a new instance of FeedBackRepoMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFeedBackRepoMock(t mockConstructorTestingTNewFeedBackRepoMock) *FeedBackRepoMock {
	mock := &FeedBackRepoMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
